let playerHP = 50;
let coins = 0;
let enemyHP = 0;
let enemyAlive = false;

function updateHP() {
  document.getElementById('hp').style.width = `${playerHP * 2}%`;
  document.getElementById('hp-text').textContent = playerHP;
}

function updateCoins() {
  document.getElementById('coins').textContent = coins;
}

function log(message) {
  document.getElementById('log').innerText = message;
}

function encounterEnemy() {
  enemyHP = Math.floor(Math.random() * 11 + 10); // 10-20
  enemyAlive = true;
  log(`敵が現れた！ HP: ${enemyHP}`);
  document.getElementById('enemy-img').style.backgroundImage = "url('img/F-chara_Dragon_knight01.png')";
;
}

function attack() {
  if (!enemyAlive) return;
  let damage = Math.floor(Math.random() * 10 + 1);
  if (Math.random() < 0.1) {
    damage *= 10;
    log(`クリティカルヒット！ ${damage}のダメージを与えた！`);
  } else {
    log(`${damage}のダメージを与えた！`);
  }
  enemyHP -= damage;

  if (enemyHP <= 0) {
    enemyAlive = false;
    let reward = Math.floor(Math.random() * 101 + 50); // 50-150
    coins += reward;
    updateCoins();
    log(`敵を倒した！ コイン +${reward}`);
    document.getElementById('enemy-img').style.backgroundImage = '';
    setTimeout(() => {
      if (playerHP > 0) moveForward();
    }, 1500);
    return;
  }
  setTimeout(enemyAttack, 1000);
}

function escape() {
  if (!enemyAlive) return;
  if (Math.random() < 0.5) {
    log("うまく逃げられた！");
    enemyAlive = false;
    document.getElementById('enemy-img').style.backgroundImage = '';
    setTimeout(() => {
      if (playerHP > 0) moveForward();
    }, 1500);
  } else {
    log("逃走失敗！");
    setTimeout(enemyAttack, 1000);
  }
}

function enemyAttack() {
  let damage = Math.floor(Math.random() * 15 + 1);
  playerHP -= damage;
  updateHP();
  log(`敵の攻撃！ ${damage}のダメージを受けた！`);
  if (playerHP <= 0) {
    log("HPが0になった！ GAME OVER");
    document.getElementById('commands').style.display = 'none';
  }
}

function moveForward() {
  let steps = Math.floor(Math.random() * 9 + 1);
  for (let i = 0; i < steps; i++) {
    if (Math.random() < 0.4) {
      encounterEnemy();
      return;
    }
  }
  log("敵はいなかった。先へ進む...");
}

// ゲーム開始
updateHP();
updateCoins();
moveForward();
